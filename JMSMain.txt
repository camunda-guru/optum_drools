
import javax.jms.Connection;
import javax.jms.ConnectionFactory;
import javax.jms.Destination;
import javax.jms.JMSException;
import javax.jms.MessageProducer;
import javax.jms.Session;
import javax.jms.TextMessage;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import org.apache.activemq.ActiveMQConnection;
import org.apache.activemq.ActiveMQConnectionFactory;
import org.jbpm.test.JBPMHelper;
import org.kie.api.KieBase;
import org.kie.api.KieServices;
import org.kie.api.runtime.KieContainer;
import org.kie.api.runtime.KieSession;
import org.kie.api.runtime.manager.RuntimeEngine;
import org.kie.api.runtime.manager.RuntimeEnvironmentBuilder;
import org.kie.api.runtime.manager.RuntimeManager;
import org.kie.api.runtime.manager.RuntimeManagerFactory;
import org.kie.api.task.TaskService;
import org.kie.api.task.model.TaskSummary;


public class ProcessMain {
	private static ConnectionFactory factory = null;
	private static  Connection connection = null;
	private static  Session session = null;
	private static Destination destination = null;
	private static MessageProducer producer = null;
	public static void main(String[] args) {
		KieServices ks = KieServices.Factory.get();
		KieContainer kContainer = ks.getKieClasspathContainer();
		KieBase kbase = kContainer.getKieBase("kbase");

		RuntimeManager manager = createRuntimeManager(kbase);
		RuntimeEngine engine = manager.getRuntimeEngine(null);
		KieSession ksession = engine.getKieSession();
		TaskService taskService = engine.getTaskService();

		ksession.startProcess("com.sample.bpmn.hello");
		// a jframe here isn't strictly necessary, but it makes the example a little more real
	    JFrame frame = new JFrame("InputDialog Example #1");

	    // prompt the user to enter their name
	    String name = JOptionPane.showInputDialog(frame, "Task1 user name?");
		// let john execute Task 1
		List<TaskSummary> list = taskService.getTasksAssignedAsPotentialOwner(name, "en-UK");
		
		TaskSummary task = list.get(0);
		System.out.println(name+" is executing task " + task.getName());
		
		taskService.start(task.getId(), name);
		
		taskService.complete(task.getId(), name, null);

		// let mary execute Task 2
		name = JOptionPane.showInputDialog(frame, "Task2 user name?");
		
		list = taskService.getTasksAssignedAsPotentialOwner(name, "en-UK");
		task = list.get(0);
		
		System.out.println(name + " is executing task " + task.getName());
		taskService.start(task.getId(), name);
		// Claim Task
        //taskService.claim(task.getId(), name);
		taskService.complete(task.getId(), name, null);
         sendData("Task Data"+task.getId());
		manager.disposeRuntimeEngine(engine);
		System.exit(0);
	}

	private static RuntimeManager createRuntimeManager(KieBase kbase) {
		JBPMHelper.startH2Server();
		JBPMHelper.setupDataSource();
		EntityManagerFactory emf = Persistence.createEntityManagerFactory("org.jbpm.persistence.jpa");
		RuntimeEnvironmentBuilder builder = RuntimeEnvironmentBuilder.Factory.get()
			.newDefaultBuilder().entityManagerFactory(emf)
			.knowledgeBase(kbase);
		return RuntimeManagerFactory.Factory.get()
			.newSingletonRuntimeManager(builder.get(), "com.sample:example:1.0");
	}

	private static void sendData(String data)
	{
		// TODO Auto-generated method stub
				try {
					factory = new ActiveMQConnectionFactory(
					ActiveMQConnection.DEFAULT_BROKER_URL);
					connection = factory.createConnection();
					connection.start();
					session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
					destination = session.createQueue("OptumTaskQueue");
					producer = session.createProducer(destination);
					TextMessage message = session.createTextMessage();
					message.setText("Hello ...This is a sample message..sending from FirstClient"+data);
					producer.send(message);
					System.out.println("Sent: " + message.getText());

					} catch (JMSException e) {
					e.printStackTrace();
					}
	}
}